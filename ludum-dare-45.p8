pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
-->8
--> MAIN
    function _init()
        init_player()
        init_camera()
		--init_random_stuff() --remove later
    end

    function _update()
        update_player()
        update_bodies()
        update_camera()
		if (btnp(5)) then
			b=box_center(player.body.box)
			blood(b.x, b.y)
		end
    end

    function _draw()
        draw_camera()
        draw_map()
        draw_player()
		draw_particles()
		--print(str_num(player.body.speed.x).." "..str_num(player.body.speed.y), 0, 10, 7)

		debug()
    end

	debug_mode=false
	function debug()
		if (stat(31)=="b" or btnp(4)) debug_mode = not debug_mode
		if (debug_mode)then
			draw_clear_box(abs_box(67, 87, 127, 127))
			printui('ram: '..stat(0), 69, 89, 4)
			printui('cpu1: '..stat(1), 69, 99,4)
			printui('cpu2: '..stat(2), 69, 109,4)
		end
	end

-->8 PLAYER
    player={}

    function init_player()
		player={
            body=new_body(64, 64, 15, 15, 0b010, 0b101, 0.3, 0, 100),
			cols=new_check_cols(),
			anim={
				idle=create_anim_w_by_h({0, 2, 4}, 2, 2, false, false, .5),
				move_right=create_anim_w_by_h({6, 8, 10}, 2, 2, false, false, .5),
				move_left=create_anim_w_by_h({6, 8, 10}, 2, 2, true, false, .5),
				wall_right=create_anim_w_by_h({34}, 2, 2, true, false, 0),
				wall_left=create_anim_w_by_h({34}, 2, 2, false, false, 0),
				jump=create_anim_w_by_h({32}, 2, 2, false, false, 0)
			}
        }
	end

    function update_player()
		move_player()
		old_cols = cpy(player.cols)
		check_cols(player.body.box, player.cols, player.body.col_with)
		if (not old_cols.b and player.cols.b) then
			b=box_center(player.body.box)
			air_blow(b.x, b.y+8, 5, 1)
		end
	end

    function move_player()
        dx=(btn(0) and-1 or 0)+(btn(1) and 1 or 0)
        player.body.speed.x += dx*1.5
		if (btnp(2)) then
			if (player.cols.b) then
				b=box_center(player.body.box)
				air_blow(b.x, b.y+8, 10, 1)
				player.body.speed.y += -10
			elseif (not player.cols.b and player.cols.r and not player.cols.l) then
				b=box_center(player.body.box)
				air_blow(b.x+8, b.y, 1, 10)
				player.body.speed.x += -15
				player.body.speed.y += -20
			elseif (not player.cols.b and not player.cols.r and player.cols.l) then
				b=box_center(player.body.box)
				air_blow(b.x-6, b.y, 1, 10)
				player.body.speed.x += 15
				player.body.speed.y += -20
			end
		end
		if (player.cols.b and dx == 0) then
			player.body.speed.x *= 0.5
		end
		if (not player.cols.b and player.body.speed.y > 0 and (player.cols.l or player.cols.r)) then
			player.body.speed.y *= 0.5
		end
    end

	function draw_player()
		x = player.body.box.l y = player.body.box.t
		if (player.cols.b) then
			if (player.body.speed.x >= 1) then draw_anim(x, y, player.anim.move_right) printui("mr", 20, 40, 7)
			elseif (player.body.speed.x <= 1) then draw_anim(x, y, player.anim.move_left) printui("ml", 20, 40, 7)
			else draw_anim(x, y, player.anim.idle) printui("il", 20, 40, 7) end
		elseif (player.cols.l) then draw_anim(x, y, player.anim.wall_left) printui("wl", 20, 40, 7)
		elseif (player.cols.r) then draw_anim(x, y, player.anim.wall_right) printui("wr", 20, 40, 7)
		else draw_anim(x, y, player.anim.jump) printui("jm", 20, 40, 7) end
		
	end

--> SOME RANDOM OBJECTS DOR TESTING
	function init_random_stuff()
		for i=0,5,1 do
			new_body(150+i*15, 100, 7, 7, 0b100, 0b101, 1, 16, 0)
			new_body(165+i*19, 100, 7, 7, 0b1000, 0b111, 1, 17, 1)
		end
	end

-->8
-->8 CAMERA AND MAP
    cam={x=0,y=0}
	cam_bounds={}

    function init_camera()
		cam_bounds=abs_box(48,48,80,80)
	end

    function update_camera()
		cam_follow(player.body.box)
	end

	function draw_camera()
		cls()
	end

	function cam_move_to(x,y)
		cam.x=min(896,max(0,x))
		cam.y=min(128,max(0,y))
		camera(cam.x,cam.y)
	end

	function cam_focus(b)
		cam_move_to(b.l-64,b.t-64)
	end

	function cam_follow(b)
		dx=0
		dy=0

		c=box_s2w(cam_bounds)

		if(b.l<c.l) dx+=b.l-c.l
		if(b.r>c.r) dx+=b.r-c.r
		if(b.t<c.t) dy+=b.t-c.t
		if(b.b>c.b) dy+=b.b-c.b

		cam_move_to(cam.x+dx,cam.y+dy)
	end

--> MAP
    function draw_map()
		mx=flr(cam.x/8)
		my=flr(cam.y/8)
		map(mx,my,mx*8,my*8,17,17)
	end

-->8
--> COLLISIONS AND PHYSICS
--> COLLISIONS
	col_map={}

	function col_add_box(b, m)
		for x=b.l,b.r,1 do
			col_map[flr(x).." "..b.t]=m
			col_map[flr(x).." "..b.b]=m	
			if(x==b.l or x==b.r)then
				for y=b.t+1,b.b-1,1 do
					col_map[flr(x).." "..flr(y)]=m
				end
			end
		end
	end

	function col_move_box(b, fm, m)
		if(flr(fm.x)==0 and flr(fm.y)==0) return b
		newb=cpy(b)
		newb.l+=flr(fm.x) newb.r+=flr(fm.x)
		newb.t+=flr(fm.y) newb.b+=flr(fm.y)
		for x=b.l,b.r,1 do
			for y=b.t,b.b,1 do
				col_map[flr(x).." "..flr(y)]=nil
			end
		end
		col_add_box(newb, m)
		return newb
	end

	function col_get_point(x,y,mask)
		map_mask = fget(mget(flr(x/8),flr(y/8)))
		col_mask = col_map[flr(x).." "..flr(y)]
		if (col_mask==nil) col_mask=0
		return band(map_mask, mask)!=0 or band(col_mask, mask)!=0
	end

	function col_free_box(b,m)
		for x=b.l,b.r,1 do
			for y=b.t,b.b,1 do
				if(col_get_point(x,y,m)) return false
			end
		end
		return true
	end

	function col_free_move(b,dx,dy,cm)
		fm={x=dx,y=dy}
		f={x=false,y=false}
		if(dx>0) x=b.r+dx
		if(dx<0) x=b.l+dx
		while true do
			if abs(fm.x)<=0 then break end
			if f.x then break end
			for y=b.t,b.b,1 do
				f.x=(not col_get_point(x,y,cm))
				if not f.x then break end
			end
			if abs(fm.x)<=0 then break end
			if f.x then break end
			x-=sgn(dx)
			fm.x-=sgn(dx)
		end
		if(dy>0) y=b.b+dy
		if(dy<0) y=b.t+dy
		while true do
			if abs(fm.y)<=0 then break end
			if f.y then break end
			for x=b.l,b.r,1 do
				f.y=(not col_get_point(x,y,cm))
				if not f.y then break end
			end
			if abs(fm.y)<=0 then break end
			if f.y then break end
			y-=sgn(dy)
			fm.y-=sgn(dy)
		end
		if abs(fm.x)>0 and abs(fm.y)>0 then
			if(fm.x>0)then x=b.r+fm.x else x=b.l+fm.x end
			if(fm.y>0)then y=b.b+fm.y else y=b.t+fm.y end
			while true do
				if(not col_get_point(x,y,cm)) return fm
				if (sgn(dx)*fm.x<=0 or sgn(dy)*fm.y<=0) return {x=0,y=0}
				x-=sgn(dx)*dx*0.1
				y-=sgn(dy)*dy*0.1
				fm.x-=sgn(dx)*dx*0.1
				fm.y-=sgn(dy)*dy*0.1
			end
		end
		return fm
	end

	function new_check_cols()
		return {b=false, l=false, r=false, t=false}
	end

	function check_cols(b, c, m)
		y=b.t-1
		for x=b.l,b.r,1 do
			c.t=col_get_point(x,y,m)
			if(c.b) break
		end
		y=b.b+1
		for x=b.l,b.r,1 do
			c.b=col_get_point(x,y,m)
			if(c.b) break
		end
		x=b.l-1
		for y=b.t,b.b,1 do
			c.l=col_get_point(x,y,m)
			if(c.l) break
		end
		x=b.r+1
		for y=b.t,b.b,1 do
			c.r=col_get_point(x,y,m)
			if(c.r) break
		end
	end

--> PHYSICS
    bodies={}
    gravity={x=0,y=1}

	function update_bodies()
		for i=1,#bodies,1 do
            bodies[i].speed.x+=gravity.x
            bodies[i].speed.y+=gravity.y
			clamp_speed(bodies[i])
            move_body(bodies[i])
		end
	end

	function new_body(x,y,sx, sy, m, cm, f, sprite, z)
		body={
			box=box(x,y,sx,sy),
			speed={x=0,y=0},
			mask=m,
			col_with=cm,
			friction = f,
			z=z
		}
		col_add_box(body.box, body.mask)
        add(bodies, body)
		sort(bodies, function(a,b) return a.z>b.z end)
		return body
	end

	function clamp_speed(body)
		if (abs(body.speed.x)>7) body.speed.x = sgn(body.speed.x)*7
        if (abs(body.speed.y)>7) body.speed.y = sgn(body.speed.y)*7
	end

	function move_body(b)
		fm=col_free_move(b.box, b.speed.x, b.speed.y, b.col_with)
		b.speed.x = fm.x
		b.speed.y = fm.y
		b.box=col_move_box(b.box, fm, b.mask)
	end

-->8
--> EFFECTS
particles={}

function create_raw_particles(x, y, lt, draw)
	pcl={
		x=x,
		y=y,
		lifetime=lt,
		draw=draw,
		timer=0.0,
	}
	add(particles, pcl)
	return pcl
end

function create_particles(x, y, lt, init, draw)
	pcl={
		x=x,
		y=y,
		lifetime=lt,
		draw=draw,
		timer=0.0,
	}
	init(pcl)
	add(particles, pcl)
end
 

function draw_particles()
	printui(''..#particles, 10, 10)
	for pcl in all(particles) do
		if (pcl.timer >= pcl.lifetime and pcl.lifetime > 0) then
			del(particles, pcl)
		else
			pcl.draw(pcl)
		end
	end
end

function explosion(x, y, lt)
	create_particles(x, y, lt, init_explosion, draw_explosion)
end

function init_explosion(pcl)
	pcl.pcs = {}
	for i=1,20,1 do
		a=rnd(6.28)
		pc = {
			x=pcl.x,
			sx=cos(a)*(1-rnd(1)),
			y=pcl.y,
			sy=sin(a)*(1-rnd(1))-2-rnd(3),
			lt=pcl.lifetime*(rnd(0.4)+1)
		}
		add(pcl.pcs, pc)
	end
end

function draw_explosion(pcl)
	for pc in all(pcl.pcs) do
		p = 1-(pc.lt / pcl.lifetime)
		if p<0.2 then
			circ(pc.x, pc.y,0,7)
		elseif p<0.4 then
			circ(pc.x, pc.y,0,10)
		elseif p<0.6 then
			circ(pc.x, pc.y,0,9)
		elseif p<0.8 then
			circ(pc.x, pc.y,0,8)
		else
			circ(pc.x, pc.y,0,5)
		end
		pc.sx*=1.1-p
		pc.x+=pc.sx
		pc.y+=pc.sy
		pc.lt-=1/30
		if (pc.lt<=0) del(pcl.pcs, pc)
	end
	if #pcl.pcs==0 then
		pcl.timer=pcl.lifetime+1
	end
end

function blood(x, y)
	create_particles(x, y, .5, init_blood, draw_blood)
end

function init_blood(pcl)
	pcl.pcs = {}
	for i=1,40,1 do
		a=rnd(6.28)
		pc = {
			b=box(pcl.x,pcl.y,0,0),
			s={x=cos(a)*rnd(8),	y=-abs(sin(a))-2-rnd(8)},
			lt=pcl.lifetime*(rnd(0.4)+1)
		}
		add(pcl.pcs, pc)
	end
end

function draw_blood(pcl)
	for pc in all(pcl.pcs) do
		p = (pc.lt / pcl.lifetime)
		circfill(pc.b.l, pc.b.t,2.5*(p-0.2),8)
		pc.s.y+=gravity.y
		pc.s = col_free_move(pc.b, pc.s.x, pc.s.y, 0b1)
		if (abs(pc.s.y)<0.5) pc.s.x*=0.7
		pc.b.l=pc.b.l+pc.s.x pc.b.r=pc.b.l
		pc.b.t=pc.b.t+pc.s.y pc.b.b=pc.b.t
		pc.lt-=1/30
		if (pc.lt<=0) del(pcl.pcs, pc)
	end
	if #pcl.pcs==0 then
		pcl.timer=pcl.lifetime+1
	end
end

function air_blow(x, y, sx, sy)
	pcl = create_raw_particles(x, y, .15, draw_air_blow)
	pcl.sx = sx
	pcl.sy = sy
	init_air_blow(pcl)
end

function init_air_blow(pcl)
	pcl.pcs = {}
	for i=1,60,1 do
		pc = {
			b=box(pcl.x,pcl.y,0,0),
			s={x=pcl.sx*(rnd(2)-1), y=pcl.sy*(rnd(2)-1)},
			lt=pcl.lifetime*(rnd(.5)+.75)
		}
		add(pcl.pcs, pc)
	end
end

function draw_air_blow(pcl)
	for pc in all(pcl.pcs) do
		p = (pc.lt / pcl.lifetime)
		if (p < 0.4) then circ(pc.b.l, pc.b.t,0,6)
		else circ(pc.b.l, pc.b.t,0,7) end
		pc.s.x*=0.5
		pc.s.y*=0.5
		pc.s = col_free_move(pc.b, pc.s.x, pc.s.y, 0b1)
		pc.b.l=pc.b.l+pc.s.x pc.b.r=pc.b.l
		pc.b.t=pc.b.t+pc.s.y pc.b.b=pc.b.t
		pc.lt-=1/30
		if (pc.lt<=0) del(pcl.pcs, pc)
	end
	if #pcl.pcs==0 then
		pcl.timer=pcl.lifetime+1
	end
end

--> ANIMATION
	function create_anim_w_by_h(sprites, w, h, flip_x, flip_y, speed)
		return {
			sprites=sprites, w=w, h=h, flip_x=flip_x, flip_y=flip_y, speed=speed, dt=0
		}
	end

	function draw_anim(x, y, anim)
		i = (anim.dt%#anim.sprites)+1
		spr(anim.sprites[i], x, y, anim.w, anim.h, anim.flip_x, anim.flip_y)
		anim.dt+=anim.speed
	end

	function reset_anim(anim)
		anim.dt = 0
	end

-->8
--> BOX AND UTILS
--> BOX

	function box(x,y,w,h)
		return {l=x,t=y,r=x+w,b=y+h}
	end

	function abs_box(l,t,r,b)
		return {l=l,t=t,r=r,b=b}
	end
	
	function spr_box(x,y)
		return box(x,y,8,8)
	end
	
	function txt_box(str,x,y)
		return box(x,y,4 * #str,5)
	end
	
	function is_in_box(x,y,b)
		return x>=b.l and x<=b.r and y>=b.t and y<=b.b
	end

	function clear_box(b)
		rectfill(b.l,b.t,b.r,b.b,0)
	end

	function draw_box(b,c)
		c=c or 7
		line(b.l+1,b.t,b.r-1,b.t,c)
		line(b.l,b.t+1,b.l,b.b-1,c)
		line(b.r,b.t+1,b.r,b.b-1,c)
		line(b.l+1,b.b,b.r-1,b.b,c)
	end

	function draw_clear_box(b)
		clear_box(box_s2w(add_box(abs_box(1,1,-1,-1),b)))
		draw_box(box_s2w(b))
	end

	function box_w2s(b)
		return abs_box(b.l-cam.x,b.t-cam.y,b.r-cam.x,b.b-cam.y)
	end

	function box_s2w(b)
		return abs_box(b.l+cam.x,b.t+cam.y,b.r+cam.x,b.b+cam.y)
	end

	function add_box(b1,b2)
		return abs_box(b1.l+b2.l,b1.t+b2.t,b1.r+b2.r,b1.b+b2.b)
	end

	function box_center(b)
		return {x=0.5*(b.l+b.r), y=0.5*(b.t+b.b)}
	end

--> UTILS
	function str_num(n,d)
		str=''..n
		for i=0,d-#str-1,1 do str='0'..str end
		return n<1 and sub(str,2) or str
	end

	function printui(t,x,y,c)
		print(t,x+cam.x,y+cam.y,c)
	end

	function sprui(s,x,y)
		spr(s,x+cam.x,y+cam.y)
	end

    function cpy(orig)
		new={}
		for k,v in pairs(orig) do
			new[k]=v
		end
		return new
	end

	function sort(a,cmp)
		for i=1,#a do
			j = i
			while j > 1 and cmp(a[j-1],a[j]) do
				a[j],a[j-1] = a[j-1],a[j]
				j = j - 1
			end
		end
	end

	function pow(a, b)
		r=1
		for i=1,b,1 do
			r*=a
		end
		return r
	end



__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00066000006660000006600000666000000660000066600000000000000000000000000000000000000000000000000000000000000000000000000000000000
006e6000006e6600006e6000006e6600006e6000006e660000000000000000000000000000000000000000000000000000000000000000000000000000000000
066e6066606ee600066e6066606ee600066e6066606ee60000dd00000000000000dd00000000000000dd00d00000000000000000000000000000000000000000
06ee6666666ee60006ee6666666ee60006ee6666666ee6000d00d0000000000000d0d000000000000d00dd000000000000000000000000000000000000000000
066666c6c6666600066666c6c6666600066666c6c66666000d00d000000000000d000d00000000000d0000000000000000000000000000000000000000000000
0000666666600000000066666660000000006666666000000d000000060000000d000000000000000d0000000600000000000000000000000000000000000000
0000666e666000000000666e666000000000666e6660000000dd00006e60000000d000000600000000d000006e60000000000000000000000000000000000000
00000566650000d00000056665000d00000005666500d000000d00006e600000000d00006e600000000d00006e60000000000000000000000000000000000000
0000555155500d0000005551555000d0000055515550d0000055555566660000005555556e660000005555556666000000000000000000000000000000000000
0000555d55500d000000555d555000d00000555d5550d00005555555556c600005555555556c600005555555556c600000000000000000000000000000000000
0000555d55500d000000555d555000d00000555d55500d000555555555666e000555555555666e000555555555666e0000000000000000000000000000000000
0000555d5550d0000000555d5550dd000000555d55500d0005555555556660000555555555666000055555555566600000000000000000000000000000000000
00005555555d000000005555555d000000005555555dd00005f5555f5566000005f5555f5566000005f5555f5566000000000000000000000000000000000000
00000555550000000000055555000000000005555500000000f0000f0000000000f0000f0000000000f0000f0000000000000000000000000000000000000000
000ffff5ffff0000000ffff5ffff0000000ffff5ffff000000ff000ff0000000000f000f0000000000f00000f000000000000000000000000000000000000000
00066000006660006660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
006e6000006e60006ee6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
06ee6000006ee6006e66600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
06666066606666006666c60000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000666c6c6660000066666e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00006666666000000666660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f00666e66600f000555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f00056665000fd0f555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f50555155505f0df555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0555555d5555550df555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0055555d5555000d055555500d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000555d55500dd005555550d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00005555555dd00005555500d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000055555000000f555d00d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000ffff5ffff0000f5500dd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3b533b333b3bb5333b3bb5335b3bb5333b533b550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33553333333333333333333355333333335535550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333533333355333333555533335333335550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33533355333353333333533353335333335333530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
53333333353335333533353355333333533333550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333533355333333553333355533333333335550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3333333533335333bbbbbbbb53335333333333350000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5333333355353333bbbbbbbb55353333533333550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3353353333333533b35bbb3b55333533335335550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33553333333333333333353355333333335533550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333533333355333333555333335333333550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33533355333353333333533355335333335333550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
53333333353335333533353355333533533333350000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333533355333333553333355533333333335350000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0001000100010001000100010000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001010101010000000000000000000000010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000c9ab017c88d7e9b66cec5a341df4b6a24521ec100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
5052524152415241525252415241525200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5400000000000000000000000000005300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5400000000000000000000000000005300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5400000000000000000000000000005300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5400000000000000000000000000005300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5400000000000000000000000000005300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5400000000000000000000000000455300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5400000000000000000000000000455300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5400000000000000000000000000455300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5400000000000000000000000000455300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5400000000000000000000000000455300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5400000000000040410000000000005300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5400000000000053540000000000005300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5400000000000053545500000000005300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5040414041404150504140424041425000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4545454545454545454545454545454545000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
